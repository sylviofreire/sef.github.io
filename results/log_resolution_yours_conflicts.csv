/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_22e12be_162ae20/rev_22e12be-162ae20/src/main/java/com/alibaba/fastjson/serializer/SerializeWriter.java;<<<<<<< MINE
                count = newcount;

                System.arraycopy(buf, i + 1, buf, i + 2, end - i - 1);
                buf[i] = '\\';
                buf[++i] = replaceChars[(int) ch];
                end++;
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_162ae20_22e12be/rev_162ae20-22e12be/src/main/java/com/alibaba/fastjson/serializer/SerializeWriter.java;<<<<<<< MINE
                count = newcount;

                System.arraycopy(buf, i + 1, buf, i + 2, end - i - 1);
                buf[i] = '\\';
                buf[++i] = replaceChars[(int) ch];
                end++;
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_5df25cb_ebe948a/rev_5df25cb-ebe948a/src/main/java/com/alibaba/fastjson/parser/DefaultJSONParser.java;<<<<<<< MINE
        this.lexer = lexer;
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_55afa54_bd49960/rev_55afa54-bd49960/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java;<<<<<<< MINE
            // mw.visitVarInsn(ALOAD, context.var("out"));
            // mw.visitFieldInsn(GETSTATIC, getType(SerializerFeature.class), "WriteClassName",
            // "L" + getType(SerializerFeature.class) + ";");
            // mw.visitMethodInsn(INVOKEVIRTUAL, getType(SerializeWriter.class), "isEnabled",
            // "(" + "L" + getType(SerializerFeature.class) + ";" + ")Z");
            // mw.visitJumpInsn(IFEQ, else_);

=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_55afa54_bd49960/rev_55afa54-bd49960/src/main/java/com/alibaba/fastjson/serializer/SerializeWriter.java;<<<<<<< MINE
        int specialCount = 0;
        int lastSpecialIndex = -1;
        char lastSpecial = '\0';
        for (int i = nameStart; i < nameEnd; ++i) {
            char ch = buf[i];
            if (ch == '\b' || ch == '\n' || ch == '\r' || ch == '\f' || ch == '\\'
                || ch == '"' //
                || (ch == '\t' && isEnabled(SerializerFeature.WriteTabAsSpecial))
                || (ch == '/' && isEnabled(SerializerFeature.WriteSlashAsSpecial))) {
                specialCount++;
                lastSpecialIndex = i;
                lastSpecial = ch;
            }
        }

        if (specialCount > 0) {
            newcount += specialCount;
            if (newcount > buf.length) {
                expandCapacity(newcount);
            }
            count = newcount;
        }

        if (specialCount == 1) {
            System.arraycopy(buf, lastSpecialIndex + 1, buf, lastSpecialIndex + 2, nameEnd - lastSpecialIndex - 1);
            buf[lastSpecialIndex] = '\\';
            buf[++lastSpecialIndex] = replaceChars[(int) lastSpecial];
            nameEnd++;
        } else if (specialCount > 1) {
            System.arraycopy(buf, lastSpecialIndex + 1, buf, lastSpecialIndex + 2, nameEnd - lastSpecialIndex - 1);
            buf[lastSpecialIndex] = '\\';
            buf[++lastSpecialIndex] = replaceChars[(int) lastSpecial];
            nameEnd++;
            for (int i = lastSpecialIndex - 2; i >= nameStart; --i) {
                char ch = buf[i];

                if (ch == '\b' || ch == '\n' || ch == '\r' || ch == '\f' || ch == '\\'
                    || ch == '"' //
                    || (ch == '\t' && isEnabled(SerializerFeature.WriteTabAsSpecial))
                    || (ch == '/' && isEnabled(SerializerFeature.WriteSlashAsSpecial))) {
                    System.arraycopy(buf, i + 1, buf, i + 2, nameEnd - i - 1);
                    buf[i] = '\\';
                    buf[i + 1] = replaceChars[(int) ch];
                    nameEnd++;
                }
            }
        }

=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_ec0a424_5a2f7c9/rev_ec0a424-5a2f7c9/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java;<<<<<<< MINE
            if (propertyClass.isPrimitive()) {
                continue;
            } else if (propertyClass == String.class) {
                continue;
            } else if (propertyClass == BigDecimal.class) {
                continue;
            } else if (List.class.isAssignableFrom(propertyClass)) {
                continue;
            } else if (propertyClass.isEnum()) {
                continue;
            }

=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_ec0a424_5a2f7c9/rev_ec0a424-5a2f7c9/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java;<<<<<<< MINE
            Class<?> propertyClass = fieldInfo.getFieldClass();

            if (propertyClass.isPrimitive()) {
                continue;
            } else if (propertyClass == String.class) {
                continue;
            } else if (propertyClass == BigDecimal.class) {
                continue;
            } else if (List.class.isAssignableFrom(propertyClass)) {
                continue;
            } else if (propertyClass.isEnum()) {
                continue;
            }

=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_ec0a424_5a2f7c9/rev_ec0a424-5a2f7c9/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java;<<<<<<< MINE
            if (propertyClass.isPrimitive()) {
                continue;
            } else if (propertyClass == String.class) {
                continue;
            } else if (propertyClass == BigDecimal.class) {
                continue;
            } else if (List.class.isAssignableFrom(propertyClass)) {
                continue;
            } else if (propertyClass.isEnum()) {
                continue;
            }

=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_ec0a424_5a2f7c9/rev_ec0a424-5a2f7c9/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java;<<<<<<< MINE
            Class<?> propertyClass = fieldInfo.getFieldClass();

            if (propertyClass.isPrimitive()) {
                continue;
            } else if (propertyClass == String.class) {
                continue;
            } else if (propertyClass == BigDecimal.class) {
                continue;
            } else if (List.class.isAssignableFrom(propertyClass)) {
                continue;
            } else if (propertyClass.isEnum()) {
                continue;
            }

=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_969d52e_9f78225/rev_969d52e-9f78225/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java;<<<<<<< MINE
                if (context.writeDirect) {
                    mw.visitMethodInsn(INVOKEVIRTUAL, SerializeWriter, "writeStringWithDoubleQuoteDirect",
                            "(Ljava/lang/String;C)V");
                } else {
                    mw.visitMethodInsn(INVOKEVIRTUAL, SerializeWriter, "writeString",
                                       "(Ljava/lang/String;C)V");
                }
            } else {
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_969d52e_9f78225/rev_969d52e-9f78225/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java;<<<<<<< MINE
                mw.visitVarInsn(ALOAD, context.var("out"));
                mw.visitVarInsn(BIPUSH, ',');
                mw.visitMethodInsn(INVOKEVIRTUAL, SerializeWriter, "write", "(I)V");
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_9b6d748_e82a56a/rev_9b6d748-e82a56a/src/main/java/com/alibaba/fastjson/parser/deserializer/ThrowableDeserializer.java;<<<<<<< MINE
                // TODO
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Fastjson/revisions/rev_d93b71f_1c81635/rev_d93b71f-1c81635/src/test/java/com/alibaba/json/bvt/support/spring/FastJsonJsonViewTest.java;<<<<<<< MINE
		@Override
=======

>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Hystrix/revisions/rev_da1198c_5b9bdae/rev_da1198c-5b9bdae/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTest.java;<<<<<<< MINE
                hystrixThreadStartedExecuting.set(true);
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Hystrix/revisions/rev_da1198c_5b9bdae/rev_da1198c-5b9bdae/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTest.java;<<<<<<< MINE
            assertEquals(hystrixThreadStartedExecuting.get(), cmd.isExecutedInThread());
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Storm/revisions/rev_6398179_7970fee/rev_6398179-7970fee/src/jvm/storm/trident/state/map/TransactionalMap.java;<<<<<<< MINE
        _backing.multiPut(keys, newVals);
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Storm/revisions/rev_6398179_7970fee/rev_6398179-7970fee/src/jvm/storm/trident/state/map/CachedBatchReadsMap.java;<<<<<<< MINE
    @Override
    public List<T> multiUpdate(List<List<Object>> keys, List<ValueUpdater> updaters) {
        List<T> vals = _delegate.multiUpdate(keys, updaters);
        cache(keys, vals);
        return vals;
    }

    @Override
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Vert.x-Core/revisions/rev_709b147_b492e29/rev_709b147-b492e29/vertx-core/src/main/java/org/vertx/java/core/logging/impl/JULLogDelegate.java;<<<<<<< MINE

    logger.log(Level.SEVERE, message == null ? "NULL" : message.toString(), t);
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Vert.x-Core/revisions/rev_12bde32_11d3eee/rev_12bde32-11d3eee/vertx-core/src/main/java/io/vertx/core/Vertx.java;<<<<<<< MINE
  @GenIgnore
  @CacheReturn
=======
>>>>>>> YOURS
/home/paper219/Desktop/analysis/demonstration/projects/Vert.x-Core/revisions/rev_8b210bf_22f077e/rev_8b210bf-22f077e/vertx-core/src/main/java/io/vertx/core/logging/impl/VertxLoggerFormatter.java;<<<<<<< MINE
    date.setTime(record.getMillis());
=======
>>>>>>> YOURS
